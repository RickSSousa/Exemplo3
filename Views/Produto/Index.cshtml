@using X.PagedList.Mvc.Core
@model X.PagedList.IPagedList<Exemplo3.Models.Produto>


@*@model IEnumerable<Exemplo3.Models.Produto> - Não usará mais esse Ienumerable pois não queremos mais percorrer a lista de uma vez, e sim paginada conforme definimos*@


@{
    ViewData["Title"] = "Lista de Produtos";
}

<h1>Lista de Produtos</h1>

<p>
    <a asp-action="Create">Adicionar Produto</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Nome
                @*@Html.DisplayNameFor(model => model.Nome) o pagedList não permite o uso do displaynamefor, apenas displayfor*@
            </th>
            <th>
                Preco
            </th>
            <th>
                Fabricante
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nome)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Preco)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Fabricante.Nome)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.ProdutoID">Editar</a> |
                <a asp-action="Details" asp-route-id="@item.ProdutoID">Detalhes</a> |
                <a asp-action="Delete" asp-route-id="@item.ProdutoID">Deletar</a>
            </td>
        </tr>
}
    </tbody>
</table>
<div>
    @Html.PagedListPager(Model, pagina => Url.Action("Index", new { pagina }))
</div>
